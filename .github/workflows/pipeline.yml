name: Deployment pipeline backend

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  frontend_deployment_pipeline:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: 'frontend'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies (npm install)
        run: npm install
      - name: Check style (lint)
        run: npm run eslint
      - name: build
        run: npm run build
  backend_deployment_pipeline:
    needs: [frontend_deployment_pipeline]
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: 'backend'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies (npm install)
        run: npm install
      - name: Check style (lint)
        run: npm run eslint
      #- name: test
      #  run: npm run test
      - name: test
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          TEST_TOKEN: ${{ secrets.TEST_TOKEN }}
          SECRET: ${{ secrets.SECRET }}
          PORT: ${{ secrets.PORT }}
        run: npm run test
      - name: e2e tests
        uses: cypress-io/github-action@v5
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          TEST_MONGO_URI: ${{ secrets.TEST_MONGO_URI }}
          TEST_TOKEN: ${{ secrets.TEST_TOKEN }}
          SECRET: ${{ secrets.SECRET }}
          PORT: ${{ secrets.PORT }}
        with:
          working-directory: 'backend'
          command: npm run test:e2e
          start: npm run start-prod
          #wstart: npm run dev
          wait-on: http://localhost:3001
  tag_release:
    needs: [backend_deployment_pipeline]
    runs-on: ubuntu-20.04
    if: ${{!contains(join(github.event.commits.*.message, ' '), '#skip')}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: PRINT COMMITS
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: PRINT COMMIT MESSAGES
        env:
          MESSAGES: ${{ toJson(github.event.commits.*.message) }}
        run: echo "$MESSAGES"
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.70.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          DEFAULT_BUMP: patch
      - name: SUCCESS
        if: success()
        uses: discord-actions/message@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          message: "BUILD WAS SUCESFULL"
      - name: FAILURE
        if: failure()
        uses: discord-actions/message@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          message: "BUILD HAS FAILED"